Rush00 (Python, Django) -- Subject
Moviemon

ВНИМАНИЕ: Я не беру за себя ответственность за корректность перевода. Также советую пересмотреть оригинальный документ по двум причинам:
1) Он может измениться
2) В нем есть картинки
https://cdn.intra.42.fr/pdf/pdf/878/rush00.fr.pdf

Часть 1 "Инструкции"

1) Только этот файл (Subject) является источником информации. Не верьте слухам.
2) Файл Subject может измениться за час до сдачи проекта.
3) Если противоположная информация явно не указана, то вы должны считать, что используемые языки и технологии имеют такие версии:
    Python 3, HTML5, CSS 3, Javascript EM6, Django 1.9, psycopg2 2.6
4) Следите за правами ваших файлов и каталогов.
5) Заливайте вашу работу на Git. Только залитая работа будет оценена.
6) Ваши файлы будут оценены вашими товарищами по бассейну.
7) Вам не нужно оставлять в репозитории ни одного файла, кроме указанных к сдаче.
8) Также не нужно оставлять базы sqlite, папки __pycache__, папки созданные командой collectstatic из manage.py, файлы .pyc (скомпилированный Python код)
9) Если вам нужно получить какой-то результат в программе, то строго запрещено хардкодить правильный результат вместо вычисления его.
10) Если есть вопрос, спросите соседа справа. Если не получилось, спросите соседа слева.
11) Ваше справочное руководство: man/internet/google/intra forum
12) Ради Одина и Тора! Используйте мозги!

Часть 2 "Специфические правила для этого дня"

1) Маршруты, связанные с приложением, должны быть определены в файле urls.py в папке этого приложения.
2) Каждая отображаемая страница должна быть правильно отформатирована (наличие типа doctype, пары тегов <html>, <head>, <body>), правильная обработка специальных символов, а не вывод квадратиков.
3) Сервер -- тот, который по умолчанию для Django (manage.py runserver)
4) Только запрошенные URL-адреса должны возвращать страницу без ошибок. Например, если только /ex00 запрашивается, то /ex00foo должен вернуть ошибку 404.
5) Вы должны сделать require.txt (через pip freeze)


Часть 3 "Преамбула"

(Я манал это переводить)


Часть 4 "Обязательная часть"

4.1  Introduction - FAQ

Цель этого раша -- в том, чтобы вы накодили небольшую сольную игру с веб-интерфейсом.

Вопрос: Какова цель этой игры?
Ответ: Эта игра называется MovieMon, и ее целью является захват всех прячущихся мувимонов на сетке (игровом поле).

Вопрос: Мне кажется, это похоже на PokemonGo?
Ответ: Мы не знаем, о чем вы говорите.

Вопрос: Что такое Moviemon?
Ответ: Moviemon - это фильм, доступный в IMDB. В идеале фильм монстра.

Вопрос: Как поймать Moviemon?
Ответ: Бросив ему мяч (movieball). Рейтинг IMDB соответствует силе мувимона. Чем выше рейтинг, тем труднее поймать зверушку. Сила игрока, соответствующая количеству находящихся в его распоряжении мувимонов, увеличивает шансы игрока поймать очередную зверушку.

Вопрос: Как начинается игра?
Ответ: Когда игрок начинает игру, запрос пересматривает фильмы с IMDB. После этого игрока отправляют на Worldmap, главную страницу игры. На этой странице игрок свободно и быстро перемещается из ячейки в ячейку на сетке фиксированного размера. На каждой ячейке он имеет вероятность взять мувимяч или обнаружить мувимона. Когда игрок обнаруживает мувимона, то ему дается выбор: либо попытаться захватить мувимона, либо обойти. Игрок бросает мувимяч, потом второй, третий, и тд, и так пока не поймает. Если игрок успешно поймал мувимона, то он с гордостью просматривает свою мувиклетку, в которой сидят все захваченные мувимоны. А потом снова идет на охоту, чтобы поймать их всех.

4.2

4.2.1  Настройки

Вы должны вставить в настройки своего проекта некоторые настройки из самой игры, а именно:
1) Размер сетки (как минимум 10 строк на 10 столбцов)
2) Позиция игрока
3) Список названий или id как минимум 10 фильмов из IMDB

Вы должны использовать эти настройки в своем коде. Вы можете добавить другие настройки, если хотите. Рейтинг пленки соответствует ее силе. Поэтому подумайте о балансировке вашей игры, взяв достаточно хорошие и плохие фильмы. Например: по крайней мере три с оценкой менее четырех и три с оценкой больше семи.

Поскольку API IMDB довольно неясен, вы можете использовать OMDB, который является неофициальным API.

4.2.2   Игровые данные
Вам нужно хранить данные между разными страницами во время игры. Обычный сайт использует cookie или сессии, но здесь необычный сайт. Вы должны хранить данные состояния вашей игры в файле, который создан в вашем проекте. Этот файле не является резервной копией (прим. переводчика: они имеют в виду "файлом сохранения?"), он используется для хранения состояния игры между страницами.

Само собой файл не должен содержать никакой логики, и его содержимое должно быть закодировано в бинарном виде с помощью Pickle (входит в состав Python).

Вы также должны создать в проекте логику, необходимую для загрузки этого файла. Файл должен содержать такую информацию:
1) Позиция игрока на карте;
2) Количество мувиболов;
3) Имена (или id) мувимонов, сидящих в мувиклетке
4) Полная информация всех мувимонов игры, полученная с IMDB

4.2.3   Управление данными

Вы также должны создать класс Python, который отвечает за управление этими данными. Этот класс должен по крайней мере содержать следующие методы:
• «load»: загружает данные игры, переданные в качестве параметров в экземпляр класса. Возвращает текущий экземпляр.
• 'dump': возвращает данные игры.
• 'get_random_movie': случайный выбор мувимона из незахваченных мувимонов.
• 'load_default_settings': Загрузить настройки в экземпляр класса. После этого запросить и сохранить данные мувимонов из IMDB. Возвращается текущий экземпляр
• 'get_strength': возвращает силу игрока.
• 'get_movie': возвращает словарь Python, содержащий все детали, начиная с
имени (id?) Moviemon, переданного в параметре. Детали необходимы для страницы Detail.
Вы можете добавить столько методов и атрибутов в этот класс, сколько вам нужно.
Его никогда не попросят отредактировать «вручную» или удалить этот файл или любой файл резервной копии, защита. (прим.переводчика: вот это предложение я не понял)

4.2.4   Эстетика

Игра будет отображаться естественным образом в вашем браузере с помощью HTML и CSS. У вас нет разрешения на использование Javascript.

Экран игры разделен на две части, которые должны визуально отличаться:
• Экран: отображает, что происходит в игре. Невозможно взаимодействие с этим местом, которое никогда не должно содержать никакой ссылки или формы.
• Элементы управления: расположены ниже или по обе стороны экрана, они позволяют взаимодействовать с игрой и являются контекстуальными, то есть они меняют свое поведение в соответствии с состоянием игры. Это также означает, что они не обязательно все активны всегда.
С другой стороны, даже неактивные, они должны быть видны и постоянно оставаться на одном месте.
Должно быть восемь кнопок:
◦ Четыре стрелки, такие как те, которые мы могли бы найти на направляющем крестике джойстика: вверх, вправо, вниз, влево
◦ Кнопка выбора.
◦ Кнопка запуска.
◦ Кнопка A
◦ Кнопка B
У вас нет разрешения на добавление / удаление «кнопок» или отображение информации, кроме «кнопок», в этой области.
Помимо этого минимального условия, эстетика не имеет значения в обязательной части предмета.
Поведение кнопок для каждого вида описано в следующем разделе.
«Кнопка» не обязательно является тегом HTML <button>.
Неактивная «кнопка» может быть мертвой ссылкой, изображением, текстом или специальным символом.

4.2.5   Страницы

Вы должны создать страницы / представления / поведение, перечисленные ниже. «Кнопка», не упомянутая на странице, является неактивной «кнопкой». Кроме того, если пункт назначения не указан для элемента управления, это потому, что он возвращает ту же страницу, которая может быть изменена.
TitleScreen
• Описание: главный экран
• Экран: должно отображаться название игры, а также «A - новая игра» и «B - загрузка».
• Url: основной, доменное имя плюс порт.
• Элементы управления:
    ◦ A: Ссылка на страницу Worldmap.
    Перед отображением этого файла файл, содержащий информацию о текущей игре, должен быть сброшен с настройками настроек, и Moviemons должны быть запрошены снова.
    ◦ B: ссылка на страницу Загрузка

Worldmap
• Описание: карта игры, в которой движется персонаж, восстанавливает кибербол и флеши Moviemons.
• Экран: сетка, размер которой определен в настройках. На квадрате, соответствующем текущей позиции игрока, должно быть четко идентифицируемое представление (изображение, символ и т. Д.) Персонажа. На экране также должно отображаться:
    ◦ Количество киберботов.
    ◦ Сообщение при обнаружении кибербота.
    ◦ Сообщение при выталкивании Moviemon и индикация того, какую кнопку нажать, чтобы начать захват мувимона
• Url: '/ worldmap'
• Элементы управления:
    ◦ Направления: Каждое направление должно перемещать символ на одно место в одном направлении. Игрок не должен покидать карту. У каждого шага есть шанс найти Moviemon или собрать кибербол. Если Moviemon обнаружен, он выбирается случайным образом из еще не захваченных Moviemons.
    ◦ A: Только если Moviemon обнаружен: Ссылка на страницу боя с этим Moviemon.
    ◦ START: ссылка на страницу параметров.
    ◦ SELECT: ссылку на страницу Moviedex.
    Обновление этой страницы не должно изменять позицию игрока на карте.

Бой
• Описание: попытайтесь захватить Moviemon, которого вы обнаружили!
• URL: '/ battle / <moviemon_id>'. <moviemon_id> должен быть заменен идентификатором Moviemon для борьбы.
• Экран: отображает плакат и силу Moviemon, количество имеющихся в наличии киберботов, силу игрока и уровень успеха (см. Ниже).
В случае захвата вы должны также отобразить фразу типа «Вы его захватили», чтобы отметить событие.
В случае неудачи броска вы должны показывать то же самое предложение типа «Вы пропустили!» ».
Пока Moviemon не будет захвачен, на экране также должно появиться «A-Launch movieball».
Всегда вы должны показывать, что кнопка «B» возвращается к Worldmap.
• Элементы управления:
◦ A: запускает мувимяч
Если у игрока нет мяча, действие не действует (вы можете отображать на экране издевку от врага).
В противоположном случае количество мячей уменьшается на единицу, и шанс броска делается для того, чтобы узнать, захвачен ли Moviemon или нет.
Вероятностная ставка C рассчитывается следующим образом:
C = 50 - (сила монстра * 10) + (сила игрока * 5)
И 1 <= C <= 90
Например:
Для силового монстра 8.2 и силы 2 игрока:
C = 50 - 82 + 10 = -22
Этому монстру 1% вероятность поймать.
Для Power Monster 5 и Force 8:
C = 50 - 50 + 40 = 40
У этого монстра есть 40% шанс быть пойманным.
Для силового монстра 2 и силы 14 игроков:
C = 50-20 + 70 = 100
У этого монстра есть вероятность 90% быть пойманным.
В случае успеха Moviemon захватывается и сохраняется в MovieDex. Кнопка A становится неактивной.
В случае неудачи мувимонов в клетке остается столько же, сколько было.
◦ B: Вернуться на страницу Worldmap

Moviedex
• Описание: Список захваченных Moviemons. Должно быть возможно выбрать мувимона, чтобы получить доступ к его деталям.
• URL: '/ moviedex'
• Экран: должен содержать все плакаты захваченных Moviemons. Выбранный плакат должен быть отмечен отличительным графическим элементом, например обрамляя его синей границей.
Вы также должны добавить «A - Дополнительная информация» и «Выбрать - Назад».
• Элементы управления:
◦ Стрелки: Стрелки позволяют выбрать фильм. Вы должны использовать как минимум два направления: слева и справа или вверх и вниз.
◦ SELECT: Ссылка на страницу Worldmap
◦ A: Ссылка на страницу сведений выбранного Moviemon. По умолчанию на странице первый фильм в списке выбран.

Details
• Описание: Деталь moviemon.
• URL: '/ moviedex / <moviemon>' <moviemon> должен быть заменен идентификатором Moviemon.
• Экран: должен отображать имя Moviemon, плакат, режиссер, год, рейтинг, синопсис и актеры, а также «B - Back»
• Элементы управления:
◦ Кнопка B: Ссылка на страницу Moviedex

Options
• Описание: параметры игры.
• URL: '/ options'
• Экран: отображает параметры игры, которые обрабатываются с помощью «A-Save», «B-Quit» и «start-cancel»
• Элементы управления:
◦ Кнопка «Пуск»: ссылка на страницу Worldmap.
◦ Кнопка A: Ссылка на страницу «Сохранить».
◦ Кнопка B: Ссылка на страницу TitleScreen.

Сохранить
• Описание: позволяет сохранить игру в одном из трех доступных слотов.
• URL: / options / save_game
• Экран: должен отображать три слота: «Слот A», «Слот B» и «Слот C».
Выбранный слот должен быть отмечен отличительным графическим элементом, например, перед ним со стрелкой.
Если слот пуст, за ним следует «Свободный». Если нет, за ним следует число захваченных Moviemons.
Например: «Слот A: 2/15» означает, что эта резервная копия содержит часть, в которой были захвачены два из пятнадцати Moviemons.
На экране также должны отображаться «A-Save» и «B-Cancel»
• Элементы управления:
◦ Указания: Для выбора слота следует использовать направления «вверх» и «вниз».
A: Скопируйте файл, содержащий текущее состояние игры, в другой файл, который должен
для сохранения в папке 'saved_game' в вашем проекте.
Имя этого файла должно быть «slot <n> _ <score> .mmg». <n> должно быть заменено именем слота: 'a', 'b' или 'c' и <score> должны быть заменены счетом игры.
Например: slotb_1_15.mmg. (Пожалуйста, не пытайтесь ставить слэш в имени файла).
◦ B: Ссылка на страницу опций

Загрузить
• Описание: Позволяет загружать игру, сохраненную тремя слотами.
• URL: / options / load_game
• Экран: должен отображать три слота: «Слот A», «Слот B» и «Слот C».
Выбранный слот должен быть отмечен отличительным графическим элементом, например, перед ним со стрелкой.
Если слот пуст, за ним следует «Свободный». Если нет, за ним следует число захваченных Moviemons.
Например: «Слот A: 2/15» означает, что эта резервная копия содержит часть, в которой были захвачены два из пятнадцати Moviemons.
Дисплей также должен показывать «A - Load» и «B - Cancel».
После загрузки игры «A - Load» необходимо заменить на «A - start game»,
• Направления: Для выбора слота следует использовать направления «вверх» и «вниз».
• A:
Если часть не загружена: копирует содержимое файла, соответствующего выбранному слоту, в файл, используемый для хранения текущего состояния игры.
Если часть только что была загружена, «кнопка» служит ссылкой на страницу Worldmap.
Попытка загрузить «свободный» слот, очевидно, не будет иметь никакого эффекта.
• B: Ссылка на страницу TitleScreen

Часть 5: Бонус

После того, как вы завершили свою обязательную часть, вы можете реализовать дополнительные функции, чтобы заработать бонусные очки.
Чтобы ваш корректор мог рассматривать эти функции как успешные, вам нужно убедить его в хороших характеристиках функций.
Необработанная ошибка приведет к аннулированию данной функции.
Только в контексте бонусов использование Javascript допускается, если оно не влияет на работу обязательной части (которая должна работать без javascript). AJAX или Websockets не разрешены.
Вот некоторые идеи бонусов, которые вы могли бы реализовать:
• Сделайте свой сайт похожим на игровую консоль (см. Примеры):
◦ Экран должен выглядеть как настоящий экран консоли.
◦ Элементы управления в вашей игре должны быть наложены на изображения реальных элементов управления, имитирующих игровую консоль.
• В текущем состоянии игры вполне возможно угадать адрес боя и поймать монстров без необходимости искать их.
Создайте сложную или невозможную угадать систему токенов, связанную с Moviemons, для использования в URL-адресе, чтобы предотвратить cheating.
• Свяжите управление с клавишами на клавиатуре, чтобы не нужно было использовать мышь для воспроизведения.
• Чтобы варьировать игру, заставляйте каждую новую игру загружать другой выбор монстров.
• Добавить осмотр Worldmap с помощью радара, который отображает Moviemons / moviballs, доступные на квадратах рядом с положением игрока.

Rendu et peer-évaluation

Вы должны полностью настроить проект Django. За исключением ограничений выше, вы можете организовать этот проект, как захотите.

Ошибка 500 не должна быть допущена. Перепроверьте ваш views.py

Вы должны предоставить файл require.txt, содержащий все необходимые библиотеки

Django автоматически возвращает страницу 404, если URL не найдено. Вы можете встретить случаи, когда Джанго находит
url, который подходит, но который в вашей логике является ошибкой.
В этом случае рассмотрите возможность использования «raise Http404 (« мое сообщение ») в вашем
views.py.